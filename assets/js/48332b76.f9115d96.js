"use strict";(self.webpackChunkevantay_com=self.webpackChunkevantay_com||[]).push([[3139],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,h=u["".concat(c,".").concat(d)]||u[d]||m[d]||i;return n?a.createElement(h,o(o({ref:t},s),{},{components:n})):a.createElement(h,o({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3671:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return m}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={title:"Git Cheatsheet"},c=void 0,p={unversionedId:"git-cheatsheet",id:"git-cheatsheet",title:"Git Cheatsheet",description:"Published on December 24, 2020",source:"@site/docs/git-cheatsheet.md",sourceDirName:".",slug:"/git-cheatsheet",permalink:"/docs/git-cheatsheet",tags:[],version:"current",frontMatter:{title:"Git Cheatsheet"},sidebar:"docs",previous:{title:"JS Cheatsheet",permalink:"/docs/js-cheatsheet"},next:{title:"Git Ignore file",permalink:"/docs/git-ignore-file"}},s={},m=[{value:"Get branch information",id:"get-branch-information",level:2},{value:"Delete local and remote branches",id:"delete-local-and-remote-branches",level:2},{value:"Reset a branch",id:"reset-a-branch",level:2},{value:"Ignore a file&#39;s changes temporarily",id:"ignore-a-files-changes-temporarily",level:2},{value:"Resources",id:"resources",level:2}],u={toc:m};function d(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Published on December 24, 2020"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"This document was migrated from ",(0,i.kt)("a",{parentName:"em",href:"https://digipie.github.io/digidocs/git/cheat-sheet/"},"DigiDocs"))),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Basic knowledge of Git is assumed in this tutorial. If you are new to Git, visit ",(0,i.kt)("a",{parentName:"p",href:"http://rogerdudler.github.io/git-guide/"},"http://rogerdudler.github.io/git-guide/")," to learn the basics first."))),(0,i.kt)("h2",{id:"get-branch-information"},"Get branch information"),(0,i.kt)("p",null,"I want to find out what branches I have locally:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git branch\n")),(0,i.kt)("p",null,"I want to find out what is the upstream branch for a given branch:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git branch -v\n")),(0,i.kt)("p",null,"Even more verbose information:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git branch -vv\n")),(0,i.kt)("h2",{id:"delete-local-and-remote-branches"},"Delete local and remote branches"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example scenario:"),(0,i.kt)("br",{parentName:"p"}),"\n","I have merged my development branch ",(0,i.kt)("inlineCode",{parentName:"p"},"feat/new-feature")," into ",(0,i.kt)("inlineCode",{parentName:"p"},"develop")," and wish to delete the local and remote branch of ",(0,i.kt)("inlineCode",{parentName:"p"},"feat/new-feature")," now."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"The solution:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Delete the local branch:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"git branch -d feat/new-feature")),(0,i.kt)("li",{parentName:"ul"},"or with ",(0,i.kt)("inlineCode",{parentName:"li"},"--force"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"git branch -D feat/new-feature")))),(0,i.kt)("li",{parentName:"ul"},"Delete the remote branch: ",(0,i.kt)("inlineCode",{parentName:"li"},"git push <remote> -d <branch>"))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"The general command format it is based on:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Delete a local branch:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"git branch -d|--delete <branch>")),(0,i.kt)("li",{parentName:"ul"},"or with ",(0,i.kt)("inlineCode",{parentName:"li"},"--force"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"git branch -D <branch>")))),(0,i.kt)("li",{parentName:"ul"},"Delete a remote branch: ",(0,i.kt)("inlineCode",{parentName:"li"},"git push <remote> -d|--delete <branch>"))),(0,i.kt)("h2",{id:"reset-a-branch"},"Reset a branch"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example scenario:"),(0,i.kt)("br",{parentName:"p"}),"\n","I messed up my local ",(0,i.kt)("inlineCode",{parentName:"p"},"master")," branch. I want to reset it such that it will revert to being the same as ",(0,i.kt)("inlineCode",{parentName:"p"},"origin/master"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"The one-line solution:"),(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"git checkout -B master origin/master")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"The general command format it is based on:"),(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"git checkout -b|-B <new_branch> [<start point>]")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"How does it work?")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"git checkout -b|-B <new_branch>")," is typically used to create and switch to a new branch. However, if ",(0,i.kt)("inlineCode",{parentName:"p"},"<new_branch>")," already exists, it will be reset instead."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Cite")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If ",(0,i.kt)("inlineCode",{parentName:"p"},"-B")," is given, ",(0,i.kt)("inlineCode",{parentName:"p"},"<new_branch>")," is created if it doesn\u2019t exist; otherwise, it is reset."))),(0,i.kt)("h2",{id:"ignore-a-files-changes-temporarily"},"Ignore a file's changes temporarily"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example scenario:"),(0,i.kt)("br",{parentName:"p"}),"\n","I want to stop tracking changes for a given file temporarily, as I am still editing it and do not want an incomplete copy of it to be added to staging when I do ",(0,i.kt)("inlineCode",{parentName:"p"},"git add *")," (to add all changes in the current path)."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"The solution:")),(0,i.kt)("p",null,"To temporarily ignore (stop tracking) a file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git update-index --assume-unchanged <file>\n")),(0,i.kt)("p",null,"To start tracking a file again:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git update-index --no-assume-unchanged <file>\n")),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"git-ignore-file#using-git-update-index"},"Git Ignore file")," for more information."),(0,i.kt)("h2",{id:"resources"},"Resources"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://digipie.github.io/digidocs/git/cheat-sheet/"},"Original copy of this document at DigiDocs")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://git-scm.com/docs/git-branch"},"gitscm's documentation for branch")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://git-scm.com/docs/git-checkout"},"gitscm's documentation for checkout")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://git-scm.com/docs/git-push"},"gitscm's documentation for push"))))}d.isMDXComponent=!0}}]);